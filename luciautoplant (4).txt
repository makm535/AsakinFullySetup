--[[
    Auto Plant V1.0 By Daike
]]

local itemSeedID = 4585
local delayPlant = 190
local storageSeed = {"STARDALATTW"}
local storageDoorID = "AFTER10YRS"

-------------------------------------------------------
local world = getBot():getWorld()
local indexSeed = 1
local inventory = getBot():getInventory()
local farmWorlds = {}
local indexBot = {}

local function split_lines(input)
    local lines = {}
    for line in input:gmatch("[^\r\n]+") do
        table.insert(lines, line)
    end
    return lines
end
    
for _, line in pairs(split_lines(read(getBot().name:upper()))) do
    table.insert(farmWorlds,line)
end

local function canFindPath(x,y)
    return (x == getBot().x and y == getBot().y and true or #getBot():getPath(x,y) > 0 and true or false)
end

local function seperateString(str)
    local world, id = str:match("(.-):(.+)")
    return {world = world, id = id}
end

addEvent(Event.variantlist, function(variant, netid)
    if variant:get(0):getString() == "OnConsoleMessage" then
        message = variant:get(1):getString()
        if message:find("That world is inaccessible") then
            nuked = true
            unlistenEvents()
        elseif message:find("Players lower than level") then
            playerLimit = true
            unlistenEvents()
        end
    end
end)

local function enterWorld(world,id)
    if not getBot():isInWorld(world:upper()) then
        nuked = false
        playerLimit = false
        local attempt = 0
        while not getBot():isInWorld(world:upper()) do
            getBot():warp(world)
            listenEvents(12)
            while getBot().status ~= 1 do
                getBot():connect()
                sleep(math.random(10000,15000))
            end
            if not getBot():isInWorld(world:upper()) and not nuked and not playerLimit then
                attempt = attempt + 1
                if attempt >= 5 then
                    getBot():disconnect()
                    sleep(60000 * 4)
                    while getBot().status ~= 1 do
                        getBot():connect()
                        sleep(math.random(10000,15000))
                    end
                    attempt = 0
                end
            end
            if nuked then
                local modified_str = string.gsub(getBot().custom_status, "|([^|]+|%d+)$", "")
                getBot().custom_status = modified_str .. "|Joined|" .. os.time()
                return {success = false,nukes = true,playerLimits = false,wrongpass = false}
            end
            if playerLimit then
                local modified_str = string.gsub(getBot().custom_status, "|([^|]+|%d+)$", "")
                getBot().custom_status = modified_str .. "|Joined|" .. os.time()
                return {success = false,nukes = false,playerLimits = true,wrongpass = false}
            end
        end
    end
    local attempt = 0
    if id ~= "" and getBot():getWorld():getTile(getBot().x,getBot().y).fg == 6 then
        while getBot():getWorld():getTile(getBot().x,getBot().y).fg == 6 do
            getBot():warp(world,id)
            sleep(2000)
            if getBot():getWorld():getTile(getBot().x,getBot().y).fg == 6 then
                attempt = attempt + 1
                if attempt >= 4 then
                    local modified_str = string.gsub(getBot().custom_status, "|([^|]+|%d+)$", "")
                    getBot().custom_status = modified_str .. "|Joined|" .. os.time()
                    return {success = false,nukes = false,playerLimits = false,wrongpass = true}
                end
            end
        end
    end
    local modified_str = string.gsub(getBot().custom_status, "|([^|]+|%d+)$", "")
    getBot().custom_status = modified_str .. "|Joined|" .. os.time()
    return {success = true,nukes = false,playerLimits = false,wrongpass = false}
end

local function connectCondition()
    local tableIndex = {}
    local currentIndex = 0
    local proxy = getBot():getProxy().ip
    local reconnecting = 0
    local queueNumber = 0

    for i, bot in pairs(getBots()) do
        if bot:getProxy().ip == proxy then
            table.insert(tableIndex, i)
        end
    end

    if not getBot().custom_status:find("Reconnecting") then
        for _,index in pairs(tableIndex) do
            if getBot(index).custom_status:find("Reconnecting") then
                reconnecting = reconnecting + 1
            end
        end

        queueNumber = reconnecting + 1
        getBot().custom_status = "Reconnecting_" .. queueNumber .. "|0|None|0"

    else
        queueNumber = string.match(getBot().custom_status,"Reconnecting_(%d+)|")
    end

    local lastReconnected = 0

    for _,index in pairs(tableIndex) do
        if getBot(index).custom_status:find("Reconnected") then
            local time = tonumber(string.match(getBot(index).custom_status,"Reconnected|(%d+)|"))
            if time >= lastReconnected then
                lastReconnected = time
            end
        end
    end

    if os.time() < (lastReconnected + 30) then return false end

    if queueNumber == 1 then return true end

    for _,index in pairs(tableIndex) do
        if getBot(index).custom_status:find("Reconnecting_" .. (queueNumber-1)) then
            return false
        end
    end

    return true
    
end

local function internetValue()
    local httpClient = HttpClient.new()
    httpClient:setMethod(Method.get)
    httpClient.url = "https://www.google.com/"
    httpClient.headers["User-Agent"] = "Lucifer"
    local httpResult = httpClient:request()
    return httpResult.status
end

local function checkPlayerCount()
    local client = HttpClient.new()
    client:setMethod(Method.get)
    client.url = 'https://growtopiagame.com/detail'
    AmountPlayer = client:request().body:match('{"online_user":"(%d+)"')
    return tonumber(AmountPlayer)
end

local function reconnect(world,id,x,y)
    if getBot().status ~= 1 then
        print("[" .. getCurrentTime() .. "] [" .. getBot().name:upper() .. "] - This bot is got disconnected!")
        sleep((60000 * 4) + (1500 * connectionIndex()))
        local attempt = 0
        local first = connectCondition()
        while getBot().status ~= 1 do
            local internets = internetValue()
            if internets ~= 0 then
                local playerCount = checkPlayerCount()
                local condition = false
                if playerCount > 8000 then
                    while not connectCondition() do
                        sleep(2000)
                    end
                    getBot():connect()
                    sleep(45000)
                    if getBot().status ~= 1 then
                        if getBot().status == 3 or getBot().status == 4 then
                            print("[" .. getCurrentTime() .. "] [" .. getBot().name:upper() .. "] - This bot is got banned!")
                            removeBot()
                        elseif getBot().status == 0 or getBot().status == BotStatus.http_block then
                            attempt = attempt + 1
                            if attempt >= 6 then
                                print("[" .. getCurrentTime() .. "] - Alert: You might got an ercon.")
                                sleep(60000 * 20)
                                attempt = 0
                            end
                        end
                    end
                else
                    print("[" .. getCurrentTime() .. "] - Alert: Server might currently down!")
                    while true do
                        local values = internetValue()
                        if values ~= 0 then
                            local playerCount = checkPlayerCount()
                            if playerCount >= 8000 then
                                break
                            else
                                sleep(30000)
                            end
                        else
                            break
                        end
                    end
                end
            else
                print("[" .. getCurrentTime() .. "] - Alert: There is currently an internet interruption occurring.")
                
                while true do
                    local values = internetValue()
                    if values ~= 0 then
                        break
                    else
                        sleep(60000 * 2)
                    end
                end
            end
        end
        getBot().move_range = 3
        getBot().move_interval = 235
        getBot().custom_status = "Reconnected|" .. os.time() .. "|None|0"
        while getBot():isInWorld() do
            getBot():leaveWorld()
            sleep(5000)
        end
        enterWorld(world,id)
        sleep(1000)
        if x and y then
            while not getBot():isInTile(x,y) do
                getBot():findPath(x,y)
                sleep(1000)
            end
        end
        sleep(2000)
    end
end

function takeSeed()
    while inventory:getItemCount(itemSeedID) == 0 do
        local result = enterWorld(storageSeed[indexSeed],storageDoorID)
        if result.success == true then
            if world.growscan:getObjects()[itemSeedID] > 0 then
                for _,object in pairs(world:getObjects()) do
                    if object.id == itemSeedID then
                        getBot():findPath(math.floor((object.x + 8) / 32),math.floor((object.y + 8) / 32))
                        sleep(500)
                        reconnect(storageSeed[indexSeed],storageDoorID,math.floor((object.x + 8) / 32),math.floor((object.y + 8) / 32))
                        getBot():collectObject(object.oid,5)
                        sleep(1000)
                        reconnect(storageSeed[indexSeed],storageDoorID,math.floor((object.x + 8) / 32),math.floor((object.y + 8) / 32))
                        if inventory:getItemCount(itemSeedID) > 0 then
                            return
                        end
                    end
                end
            else
                if indexSeed ~= #storageSeed then
                    indexSeed = indexSeed + 1
                else
                    getBot():stopScript()
                end
            end
        else
            if indexSeed ~= #storageSeed then
                indexSeed = indexSeed + 1
            else
                getBot():stopScript()
            end
        end
    end
end

function isPlantable(x,y)
    local tile = getTile(x,y + 1)
    if not tile.fg then return false end
    local collision = getInfo(tile.fg).collision_type
    return (collision == 1 or collision == 2)
end

function checkEmpty(x,y)
    for i = 1, 5 do
        if getBot():getWorld():getTile((x-3)+i,y).fg == 0 and isPlantable((x-3)+i,y) and getBot():getWorld():hasAccess((x-3)+i,y) > 0 then
            return true
        end
    end
    return false
end

function plant(world,id)
    for tiley = 1, 53, 2 do
        for tilex = 3, 98, 5 do
            if checkEmpty(tilex,tiley) then
                if canFindPath(tilex,tiley) then
                    local countPath = #getBot():getPath(tilex,tiley)
                    if countPath <= 5 then
                        getBot().move_range = 6
                        getBot().move_interval = 110
                    else
                        getBot().move_range = 6
                        getBot().move_interval = 235
                    end
                    getBot():findPath(tilex,tiley)
                    reconnect(world,id,tilex,tiley)
                    while checkEmpty(tilex,tiley) do
                        for tiles = -2, 2, 1 do
                            if getBot():getInventory():getItemCount(itemSeedID) == 0 then
                                takeSeed()
                                sleep(200)
                                local result = enterWorld(world,id)
                                if result.success == false then
                                    return
                                end
                                getBot().move_range = 6
                                getBot().move_interval = 235
                                while not getBot():isInTile(tilex,tiley) do
                                    getBot():findPath(tilex,tiley)
                                    sleep(500)
                                end
                            end
                            if getBot():getWorld():getTile(tilex+tiles,tiley).fg == 0 and isPlantable(tilex+tiles,tiley) and getBot():getWorld():hasAccess(tilex+tiles,tiley) > 0 then
                                getBot():place(getBot().x + tiles,getBot().y,itemSeedID)
                                sleep(delayPlant)
                                reconnect(world,id,tilex,tiley)
                            end
                        end
                    end
                else
                    for tiles = -2, 2, 1 do
                        if getTile(tilex + tiles,tiley).fg == 0 then
                            if canFindPath(tilex + tiles,tiley) and isPlantable(tilex+tiles,tiley) and getBot():getWorld():hasAccess(tilex+tiles,tiley) > 0 then
                                if getBot():getInventory():getItemCount(itemSeedID) == 0 then
                                    takeSeed()
                                    sleep(200)
                                    local result = enterWorld(world,id)
                                    if result.success == false then
                                        return
                                    end
                                end
                                local countPath = #getBot():getPath(tilex,tiley)
                                if countPath <= 5 then
                                    getBot().move_range = 6
                                    getBot().move_interval = 110
                                else
                                    getBot().move_range = 6
                                    getBot().move_interval = 235
                                end
                                getBot():findPath(tilex + tiles,tiley)
                                reconnect(world,id,tilex,tiley)
                                while getBot():getWorld():getTile(tilex+tiles,tiley).fg == 0 do
                                    getBot():place(getBot().x,getBot().y,itemSeedID)
                                    sleep(delayPlant)
                                    reconnect(world,id,tilex,tiley)
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

for _,world in pairs(farmWorlds) do
    local result = enterWorld(world,"")
    sleep(1000)
    if result.success == true then
        plant(world,"")
        sleep(1000)
    end
end